{"version":3,"sources":["logo.svg","Profile.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Profile","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","src","width","height","Component","Calculator","_this","state","name","color","angka1","angka2","operation","className","type","placeholder","value","onChange","changeHandler","bind","hitung","event","setState","defineProperty","target","parseInt","App","img","menu","src_Calculator","src_Profile","_this2","id","items","map","index","style","concat","onClick","clicked","key","info","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a089790b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\n\r\n\r\nclass Profile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <img src=\"Irene.jpg\" width=\"200\" height=\"250\"/>    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Calculator extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        // active : \"Merah\",\r\n        name: 'Calculator',\r\n        color: 'Orange',\r\n        angka1: 0,\r\n        angka2: 0,\r\n        operation: 'plus'\r\n       };\r\n  }\r\n \r\n  render() {\r\n    return (\r\n        <div>\r\n        <span className={\"selected \"+this.state.color}>{this.state.name}  </span><br/><br/>\r\n        <input type=\"number\" name=\"angka1\" placeholder=\"angka 1\"  value={this.state.angka1} onChange={this.changeHandler.bind(this)}/>\r\n        <select name=\"operation\" onChange={this.changeHandler.bind(this)}>\r\n          <option value=\"plus\">+</option>\r\n          <option value=\"minus\">-</option>\r\n          <option value=\"pow\">x</option>\r\n          <option value=\"div\">:</option>\r\n        </select>\r\n        <input type=\"number\" name=\"angka2\" placeholder=\"angka 2\"  value={this.state.angka2} onChange={this.changeHandler.bind(this)}/>=\r\n        <span> {this.hitung()}</span>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  changeHandler(event) {\r\n    \r\n    // this.setState({\r\n    //   angka1: event.target.value\r\n    // });\r\n    this.setState({\r\n      [event.target.name]: event.target.value \r\n    });\r\n  }\r\n\r\n  hitung(){\r\n    switch(this.state.operation){\r\n      case 'plus': return parseInt(this.state.angka1) + parseInt(this.state.angka2);\r\n      case 'minus': return parseInt(this.state.angka1) - parseInt(this.state.angka2)\r\n      case 'pow': return parseInt(this.state.angka1) * parseInt(this.state.angka2)\r\n      case 'div': return parseInt(this.state.angka1) / parseInt(this.state.angka2)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport Profile from './Profile.js';\r\nimport Calculator from './Calculator';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n     // active : \"Merah\",\r\n     name: 'Summer',\r\n     color: 'Merah',\r\n     img: 'Panas.jpg',\r\n    //  angka1: 0,\r\n    //  angka2: 0,\r\n    //  operation: 'plus'\r\n    };\r\n  }\r\n  clicked(menu){\r\n    //untuk memperbarui state sesuai dengan menu yang dipilih\r\n    this.setState({\r\n      name: menu.name,\r\n      color: menu.color,\r\n      img: menu.img,\r\n      \r\n\r\n      //active: menu,\r\n    });\r\n  }\r\n  info(name){\r\n    //console.log(name);\r\n    if (name == 'Calculator'){\r\n      //displaY CALC\r\n     // return(\r\n      //   <div>\r\n      //   <span className={\"selected \"+this.state.color}>{this.state.name}  </span><br/><br/>\r\n      //   <input type=\"number\" name=\"angka1\" placeholder=\"angka 1\"  value={this.state.angka1} onChange={this.changeHandler.bind(this)}/>\r\n      //   <select name=\"operation\" onChange={this.changeHandler.bind(this)}>\r\n      //     <option value=\"plus\">+</option>\r\n      //     <option value=\"minus\">-</option>\r\n      //     <option value=\"pow\">x</option>\r\n      //     <option value=\"div\">:</option>\r\n      //   </select>\r\n      //   <input type=\"number\" name=\"angka2\" placeholder=\"angka 2\"  value={this.state.angka2} onChange={this.changeHandler.bind(this)}/>=\r\n      //   <span> {this.hitung()}</span>\r\n      // </div>\r\n     //);\r\n     return <Calculator></Calculator>;\r\n    }else if(name == 'Profile'){\r\n      //display profile\r\n     return <Profile> </Profile>;\r\n    }else{\r\n      //display default\r\n      return(\r\n      <div>\r\n      Ini adalah <span className = {\"selected \"+this.state.color}>\r\n      {this.state.name}</span> <br></br>\r\n      <br></br>\r\n    <img src={this.state.img} width=\"200\"></img>\r\n    {/*{this.menusaya()}*/}\r\n    </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n  // changeHandler(event) {\r\n    \r\n  //   // this.setState({\r\n  //   //   angka1: event.target.value\r\n  //   // });\r\n  //   this.setState({\r\n  //     [event.target.name]: event.target.value \r\n  //   });\r\n  // }\r\n\r\n  // hitung(){\r\n  //   switch(this.state.operation){\r\n  //     case 'plus': return parseInt(this.state.angka1) + parseInt(this.state.angka2);\r\n  //     case 'minus': return parseInt(this.state.angka1) - parseInt(this.state.angka2)\r\n  //     case 'pow': return parseInt(this.state.angka1) * parseInt(this.state.angka2)\r\n  //     case 'div': return parseInt(this.state.angka1) / parseInt(this.state.angka2)\r\n  //   }\r\n  // }\r\n /* menusaya(){\r\n    return <img src={this.state.active+\".jpg\"} width=\"200\"></img>\r\n  }*/\r\n /* menusaya(){\r\n    var gambar;\r\n    if (this.state.active.toLocaleLowerCase() === 'merah'){\r\n      gambar = \"apel\";\r\n    }else if(this.state.active.toLocaleLowerCase() === 'kuning'){\r\n      gambar = \"nanas\";\r\n    }else if(this.state.active.toLocaleLowerCase() === 'hijau'){\r\n      gambar = \"alpukat\";\r\n    }else if(this.state.active.toLocaleLowerCase() === 'biru'){\r\n      gambar = \"anggur\";\r\n    }\r\n    return <img src={gambar+\".jpg\"} width=\"200\"></img>\r\n  }*/\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        { /* map akan loop sebanyak menu yang didefinisikan*/ }\r\n        {/* kemudian mengembalikan elemen <a/> */}\r\n        <nav className=\"nav\">{this.props.items.map((menu,index) => {\r\n            var style = 'menu';\r\n\r\n            if(this.state.color === menu.color){ // if(this.state.active === menu){\r\n                style = `${style} is-active`;\r\n            }\r\n\r\n            return <a\r\n              className = {style+\" \"+menu.color}\r\n              //bind untuk membuat 'menu' bisa dikirim ke fungsi 'clicked'\r\n              onClick = {this.clicked.bind(this,menu)}\r\n              key = {index}\r\n            >\r\n              {/*{menu.color}*/}\r\n              {menu.name}\r\n            </a>;\r\n          }\r\n        )}\r\n        </nav>\r\n\r\n        <div className=\"info\">\r\n        {this.info(this.state.name)}\r\n        </div>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Custom.css'; //import cssnya\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { appendFile } from 'fs';\r\n\r\n//const items = ['Merah','Kuning','Hijau','Biru'];\r\n\r\nconst items = [\r\n  {\r\n    name : \"Summer\",\r\n    color : 'Merah',\r\n    img :'Panas.jpg'\r\n  },\r\n  {\r\n    name : \"Auntum\",\r\n    color : 'Kuning',\r\n    img :'Gugur.jpg'\r\n  },\r\n  {\r\n    name : \"Spring\",\r\n    color : 'Hijau',\r\n    img :'Semi.jpg'\r\n  }, {\r\n    name : \"Winter\",\r\n    color : 'Biru',\r\n    img :'Salju.jpg'\r\n  },\r\n  {\r\n    name : 'Calculator',\r\n    color : 'Orange'\r\n  },\r\n  {\r\n    name : 'Profile',\r\n    color : \"Ungu\"\r\n  }\r\n];\r\n\r\nReactDOM.render(<App items={items}/>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.register();\r\n"],"sourceRoot":""}